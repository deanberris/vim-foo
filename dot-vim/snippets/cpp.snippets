# Read File Into Vector
snippet readfile
	std::vector<char> v;
	if (FILE *${2:fp} = fopen(${1:"filename"}, "r")) {
		char buf[1024];
		while (size_t len = fread(buf, 1, sizeof(buf), $2))
			v.insert(v.end(), buf, buf + len);
		fclose($2);
	}${3}
# std::map
snippet map
	std::map<${1:key}, ${2:value}> map${3};
# std::vector
snippet vector
	std::vector<${1:char}> v${2};
# Namespace
snippet ns
	namespace ${1:`Filename('', 'my')`} {
		${2}
	} /* $1 */
# Class
snippet cl
	struct ${1:`Filename('$1', 'name')`} {
		$1 (${2:arguments});
	private:
		${3:/* data */}
	};

snippet clnc
	struct ${1:`Filename('$1', 'name')`} {
		$1 (${2:arguments});
		~$1 () throw ();

		void swap($1 & other); // swap function
	private:
		$1 & operator=($1 & rhs); // hidden assignment operator
		$1 ($1 const & other); // hidden copy constructor

		${3:/* data */}
	};

snippet clf
	struct ${1:`Filename('$1', 'name')`} {
		$1 (${2:arguments});
		$1 ($1 const & other); // copy constructor
		~$1 () throw ();

		void swap($1 & other); // swap function
		$1 & operator=($1 & rhs); // assignment operator
	private:

		${3:/* data */}
	};

